<?xml version="1.0" encoding="UTF-8"?>
<sequence-diagram version="1.1.14" icons="true">  
  <object id="1" language="java" name="main.Main" project="eLeMWalkie" file="/eLeMWalkie/src/main/Main.java" 
    binary="false" label="main" type="class" autoSize="true">    
    <position height="-1" width="-1" x="229" y="0"/>    
    <execution id="2">      
      <position height="574" width="57" x="5" y="113"/>    
    </execution>  
  </object>  
  <object id="31" language="java" name="lejos.robotics.subsumption.Arbitrator" project="eLeMWalkie" 
    file="C:/Program Files (x86)/leJOS NXJ/lib/nxt/classes.jar" binary="true" label="arbitrator" type="class" 
    autoSize="true">    
    <position height="-1" width="-1" x="87" y="0"/>    
    <execution id="28">      
      <position height="24" width="157" x="66" y="618"/>    
    </execution>    
    <execution id="30">      
      <position height="24" width="7" x="141" y="639"/>    
    </execution>  
  </object>  
  <object id="32" language="java" name="logger.Logging" project="eLeMWalkie" file="/eLeMWalkie/src/logger/Logging.java" 
    binary="false" label="logging" type="class" autoSize="true">    
    <position height="-1" width="-1" x="226" y="0"/>    
    <execution id="4">      
      <position height="24" width="81" x="66" y="137"/>    
    </execution>    
    <execution id="6">      
      <position height="24" width="81" x="66" y="172"/>    
    </execution>  
  </object>  
  <object id="33" language="java" name="brickConnection.ConnectToSlave" project="eLeMWalkie" 
    file="/eLeMWalkie/src/brickConnection/ConnectToSlave.java" binary="false" label="connectToSlave" type="class" 
    autoSize="true">    
    <position height="-1" width="-1" x="69" y="0"/>    
    <execution id="8">      
      <position height="24" width="141" x="151" y="217"/>    
    </execution>  
  </object>  
  <object id="34" language="java" name="robotConstructor.RobotConstructor" project="eLeMWalkie" 
    file="/eLeMWalkie/src/robotConstructor/RobotConstructor.java" binary="false" label="robotConstructor" type="class" 
    autoSize="true">    
    <position height="-1" width="-1" x="142" y="0"/>    
    <execution id="10">      
      <position height="24" width="151" x="296" y="258"/>    
    </execution>  
  </object>  
  <object id="35" language="java" name="obstacle.Obstacle" project="eLeMWalkie" 
    file="/eLeMWalkie/src/obstacle/Obstacle.java" binary="false" label="obstacle" type="class" autoSize="true">    
    <position height="-1" width="-1" x="225" y="0"/>    
    <execution id="12">      
      <position height="24" width="86" x="451" y="312"/>    
    </execution>    
    <execution id="18">      
      <position height="24" width="86" x="451" y="420"/>    
    </execution>    
    <execution id="36">      
      <position height="24" width="86" x="451" y="858"/>    
    </execution>  
  </object>  
  <object id="37" language="java" name="logWriter.DataLogging" project="eLeMWalkie" 
    file="/eLeMWalkie/src/logWriter/DataLogging.java" binary="false" label="dataLogging" type="class" autoSize="true">    
    <position height="-1" width="-1" x="199" y="0"/>    
    <execution id="14">      
      <position height="24" width="113" x="541" y="356"/>    
    </execution>    
    <execution id="16">      
      <position height="24" width="7" x="594" y="376"/>    
    </execution>    
    <execution id="38">      
      <position height="24" width="113" x="541" y="826"/>    
    </execution>  
  </object>  
  <object id="39" language="java" name="behaviour.Gait" project="eLeMWalkie" file="/eLeMWalkie/src/behaviour/Gait.java" 
    binary="false" label="gait" type="class" autoSize="true">    
    <position height="-1" width="-1" x="176" y="0"/>    
    <execution id="20">      
      <position height="24" width="61" x="658" y="457"/>    
    </execution>  
  </object>  
  <object id="40" language="java" name="behaviour.BackUp" project="eLeMWalkie" 
    file="/eLeMWalkie/src/behaviour/BackUp.java" binary="false" label="backUp" type="class" autoSize="true">    
    <position height="-1" width="-1" x="370" y="0"/>    
    <execution id="22">      
      <position height="24" width="78" x="723" y="503"/>    
    </execution>  
  </object>  
  <object id="41" language="java" name="behaviour.Touch" project="eLeMWalkie" 
    file="/eLeMWalkie/src/behaviour/Touch.java" binary="false" label="touch" type="class" autoSize="true">    
    <position height="-1" width="-1" x="206" y="0"/>    
    <execution id="24">      
      <position height="24" width="67" x="805" y="546"/>    
    </execution>  
  </object>  
  <object id="42" language="java" name="behaviour.ButtonPress" project="eLeMWalkie" 
    file="/eLeMWalkie/src/behaviour/ButtonPress.java" binary="false" label="buttonPress" type="class" autoSize="true">    
    <position height="-1" width="-1" x="333" y="0"/>    
    <execution id="26">      
      <position height="24" width="112" x="876" y="593"/>    
    </execution>    
    <execution id="43">      
      <position height="104" width="112" x="876" y="802"/>    
    </execution>  
  </object>  
  <note id="46">    
    <position height="80" width="286" x="237" y="610"/>    
    <background red="202" green="255" blue="202"/>    
    <text><![CDATA[All 4 behaviours are added to a byte array, which is passed to an 'Arbitrator' thread. 
Then the 'Arbitrator' thread will be started in main().
    ]]>
    </text>  
  </note>  
  <note id="47">    
    <position height="181" width="500" x="553" y="611"/>    
    <background red="202" green="255" blue="202"/>    
    <text><![CDATA[After the 'Arbitrator' thread is started, the behaviour classes will be executed in the order of the highest to lowest priority. (ButtonPress being the highest, Gait - the lowest, in an order they were created in main.

When a higher priority behaviour meets a specific condition, it will take over, causing the currently running behaviour to be suppressed.

This will be running until the 'ENTER' button is pressed, stopping logging, and  interrupting logWriter and obstacle threads. Then shutting down the slave brick, and itself. 
    ]]>
    </text>  
  </note>  
  <message id="3" operation="Logging()" asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="4"/>  
  </message>  
  <message id="5" operation="logging():lejos.util.NXTDataLogger" asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="6"/>  
  </message>  
  <message id="7" operation="Connect():lejos.nxt.remote.RemoteNXT" asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="8"/>  
  </message>  
  <message id="9" operation="RobotConstructor(lejos.nxt.remote.RemoteNXT)" asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="10"/>  
  </message>  
  <message id="11" operation="Obstacle(lejos.nxt.UltrasonicSensor,lejos.nxt.UltrasonicSensor)" asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="12"/>  
  </message>  
  <message id="13" operation="DataLogging(lejos.util.NXTDataLogger,robotConstructor.RobotConstructor)" 
    asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="14"/>  
  </message>  
  <message id="15" operation="start():void" asynchronous="false" x="39" y="358">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="16"/>  
  </message>  
  <message id="17" operation="start():void" asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="18"/>  
  </message>  
  <message id="19" operation="Gait(robotConstructor.RobotConstructor)" asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="20"/>  
  </message>  
  <message id="21" operation="BackUp(robotConstructor.RobotConstructor)" asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="22"/>  
  </message>  
  <message id="23" operation="Touch(lejos.nxt.TouchSensor)" asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="24"/>  
  </message>  
  <message id="25" operation="ButtonPress(lejos.nxt.remote.RemoteNXT)" asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="26"/>  
  </message>  
  <message id="27" operation="Arbitrator(lejos.robotics.subsumption.Behavior[])" asynchronous="false">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="28"/>  
  </message>  
  <message id="29" operation="start():void" asynchronous="false" x="43" y="621">    
    <end type="SOURCE" refId="2"/>    
    <end type="TARGET" refId="30"/>  
  </message>  
  <message id="44" operation="interrupt():void" asynchronous="false">    
    <end type="SOURCE" refId="43"/>    
    <end type="TARGET" refId="38"/>  
  </message>  
  <message id="45" operation="interrupt():void" asynchronous="false">    
    <end type="SOURCE" refId="43"/>    
    <end type="TARGET" refId="36"/>  
  </message>
</sequence-diagram>